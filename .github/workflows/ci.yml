name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
    types: [reopened, synchronize, opened]

jobs:
  sonarqube:
    runs-on: ubuntu-latest  # OS to run the CI pipeline

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure full history is available

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Root dependencies
        run: npm install

      - name: Backend dependencies
        run: cd backend && npm install
      
      - name: Frontend dependencies
        run: cd frontend && npm install

      - name: Run Snyk security test
        run: npm run test:security
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      - name: Create backend/.env file
        run: |
          cd backend
          touch .env
          echo "FIREBASE_ADMIN_CLIENT_EMAIL=${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_ADMIN_PRIVATE_KEY=${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}" >> .env
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "SPOONACULAR_API_KEY=${{ secrets.SPOONACULAR_API_KEY }}" >> .env
          echo "TEST_USER_EMAIL=${{ secrets.TEST_USER_EMAIL }}" >> .env
          echo "TEST_USER_PASSWORD=${{ secrets.TEST_USER_PASSWORD }}" >> .env
          echo "CLARIFAI_API_KEY=${{ secrets.CLARIFAI_API_KEY }}" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "PORT=8000" >> .env
          echo ""
        shell: bash
      
      - name: Run unit tests with Jest
        run: npm test

      - name: Run lint-staged
        run: npx lint-staged

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
